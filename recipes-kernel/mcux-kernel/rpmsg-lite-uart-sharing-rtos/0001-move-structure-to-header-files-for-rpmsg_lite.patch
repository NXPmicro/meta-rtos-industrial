From 92e6f8f0882fbd360c905220578b87e46c2410c7 Mon Sep 17 00:00:00 2001
From: Biwen Li <biwen.li@nxp.com>
Date: Thu, 19 May 2022 19:34:13 +0800
Subject: [PATCH] move structure to header files for rpmsg_lite

Signed-off-by: Biwen Li <biwen.li@nxp.com>
---
 lib/include/rpmsg_lite.h    | 40 +++++++++++++++++++++++++++++++++++++
 lib/rpmsg_lite/rpmsg_lite.c | 38 -----------------------------------
 2 files changed, 40 insertions(+), 38 deletions(-)

diff --git a/lib/include/rpmsg_lite.h b/lib/include/rpmsg_lite.h
index a1b7dfb..114ee88 100644
--- a/lib/include/rpmsg_lite.h
+++ b/lib/include/rpmsg_lite.h
@@ -89,6 +89,46 @@ extern "C" {
 /* Init flags */
 #define RL_NO_FLAGS (0)
 
+
+/* rpmsg_std_hdr contains a reserved field,
+ * this implementation of RPMSG uses this reserved
+ * field to hold the idx and totlen of the buffer
+ * not being returned to the vring in the receive
+ * callback function. This way, the no-copy API
+ * can use this field to return the buffer later.
+ */
+struct rpmsg_hdr_reserved
+{
+    uint16_t rfu; /* reserved for future usage */
+    uint16_t idx;
+};
+
+RL_PACKED_BEGIN
+/*!
+ * Common header for all rpmsg messages.
+ * Every message sent/received on the rpmsg bus begins with this header.
+ */
+struct rpmsg_std_hdr
+{
+    uint32_t src;                       /*!< source endpoint address */
+    uint32_t dst;                       /*!< destination endpoint address */
+    struct rpmsg_hdr_reserved reserved; /*!< reserved for future use */
+    uint16_t len;                       /*!< length of payload (in bytes) */
+    uint16_t flags;                     /*!< message flags */
+} RL_PACKED_END;
+
+RL_PACKED_BEGIN
+/*!
+ * Common message structure.
+ * Contains the header and the payload.
+ */
+struct rpmsg_std_msg
+{
+    struct rpmsg_std_hdr hdr; /*!< RPMsg message header */
+    uint8_t data[1];          /*!< bytes of message payload data */
+} RL_PACKED_END;
+
+
 /*! \typedef rl_ept_rx_cb_t
     \brief Receive callback function type.
 */
diff --git a/lib/rpmsg_lite/rpmsg_lite.c b/lib/rpmsg_lite/rpmsg_lite.c
index 1faa6ff..f533878 100644
--- a/lib/rpmsg_lite/rpmsg_lite.c
+++ b/lib/rpmsg_lite/rpmsg_lite.c
@@ -34,44 +34,6 @@
 #include "rpmsg_lite.h"
 #include "rpmsg_platform.h"
 
-/* rpmsg_std_hdr contains a reserved field,
- * this implementation of RPMSG uses this reserved
- * field to hold the idx and totlen of the buffer
- * not being returned to the vring in the receive
- * callback function. This way, the no-copy API
- * can use this field to return the buffer later.
- */
-struct rpmsg_hdr_reserved
-{
-    uint16_t rfu; /* reserved for future usage */
-    uint16_t idx;
-};
-
-RL_PACKED_BEGIN
-/*!
- * Common header for all rpmsg messages.
- * Every message sent/received on the rpmsg bus begins with this header.
- */
-struct rpmsg_std_hdr
-{
-    uint32_t src;                       /*!< source endpoint address */
-    uint32_t dst;                       /*!< destination endpoint address */
-    struct rpmsg_hdr_reserved reserved; /*!< reserved for future use */
-    uint16_t len;                       /*!< length of payload (in bytes) */
-    uint16_t flags;                     /*!< message flags */
-} RL_PACKED_END;
-
-RL_PACKED_BEGIN
-/*!
- * Common message structure.
- * Contains the header and the payload.
- */
-struct rpmsg_std_msg
-{
-    struct rpmsg_std_hdr hdr; /*!< RPMsg message header */
-    uint8_t data[1];          /*!< bytes of message payload data */
-} RL_PACKED_END;
-
 /* Interface which is used to interact with the virtqueue layer,
  * a different interface is used, when the local processor is the MASTER
  * and when it is the REMOTE.
-- 
2.25.1

